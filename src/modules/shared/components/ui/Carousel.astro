---
const images = [
  {
    title: 'Tigre',
    url: 'https://www.tigre.com.bo',
    imageUrl: '/tigre.webp'
  },
  {
    title: 'Ola',
    url: 'https://astrixdigital.wixsite.com/olahogarbolivia/cuidadohogar',
    imageUrl: '/ola.webp'
  },
  {
    title: 'Tienda Amiga',
    url: 'https://www.tiendaamiga.com.bo/',
    imageUrl: '/tienda-amiga.webp'
  },
]
---

<div class="py-8 md:py-20 w-full flex flex-col items-center">
  <div id="carousel" class="relative w-full max-w-3xl aspect-video bg-black bg-opacity-80 overflow-hidden cursor-grab">
    <div id="carousel-inner" class="flex transition-transform duration-300 ease-in-out h-full">
      {
      images.map( ( image ) => (

      <div
        class="w-full h-full flex-shrink-0 flex items-center justify-center"
      >
        <a href={ image.url } target="_blank">
          <img
            src={ image.imageUrl }
            alt={ image.title }
            class="max-w-full max-h-full object-contain"
          />
        </a>
      </div>

      ) )
      }
    </div>

    <div id="carousel-dots" class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
      {
      images.map( ( _image ) => (
      <button
        class="w-3 h-3 rounded-full bg-white bg-opacity-50 hover:bg-opacity-75 focus:outline-none"
      ></button>
      ) )
      }
    </div>
    <button id="prev-button" class="absolute top-1/2 left-4 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-75 rounded-full p-2 focus:outline-none">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>
    <button id="next-button" class="absolute top-1/2 right-4 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-75 rounded-full p-2 focus:outline-none">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </button>
  </div>
</div>


<script>

const carousel = document.getElementById('carousel') as HTMLDivElement
const carouselInner = document.getElementById('carousel-inner') as HTMLDivElement
const carouselDots = document.getElementById('carousel-dots') as HTMLDivElement
const prevButton = document.getElementById('prev-button') as HTMLButtonElement
const nextButton = document.getElementById('next-button') as HTMLButtonElement
const images = document.querySelectorAll( '#carousel-inner > div' ) as NodeListOf<HTMLDivElement>

let currentIndex = 0
let startX : any
let isSwiping = false


function updateCarousel() {
  const offset = currentIndex * -100
  carouselInner.style.transform = `translateX(${offset}%)`

  const dots = carouselDots.children
  for ( let i = 0; i < dots.length; i++ ) {
    dots[ i ].classList.toggle( 'bg-opacity-100', i === currentIndex )
  }
}

function nextSlide() {
  currentIndex = (currentIndex + 1) % images.length
  updateCarousel()
}

function prevSlide() {
  currentIndex = (currentIndex - 1 + images.length) % images.length
  updateCarousel()
}

function startSwipe(e : any) {
  startX = e.type === 'touchstart' ? e.touches[0].clientX : e.clientX
  isSwiping = true
}

function moveSwipe( e : any ) {
  if (!isSwiping) return
  const currentX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX
  const diff = startX - currentX
  if (Math.abs(diff) > 50) {
    if (diff > 0) {
      nextSlide()
    } else {
      prevSlide()
    }
    isSwiping = false
  }
}

function endSwipe() {
  isSwiping = false
}

updateCarousel()

nextButton.addEventListener('click', nextSlide)
prevButton.addEventListener('click', prevSlide)

carousel.addEventListener('mousedown', startSwipe)
carousel.addEventListener('mousemove', moveSwipe)
carousel.addEventListener('mouseup', endSwipe)
carousel.addEventListener('mouseleave', endSwipe)

carousel.addEventListener('touchstart', startSwipe)
carousel.addEventListener('touchmove', moveSwipe)
carousel.addEventListener('touchend', endSwipe)

setInterval( nextSlide, 5000 )
</script>
