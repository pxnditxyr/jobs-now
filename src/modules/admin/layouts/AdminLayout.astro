---
import { ClientRouter } from 'astro:transitions'
import { SITE_INFO } from '@/constants/site-info'
import { Icon } from 'astro-icon/components'
import AdminNav from '@/modules/admin/components/ui/AdminNav.astro'

interface Props {
  title?: string
  image?: string
  description?: string
  author?: string
  class?: string
}

const {
  title = SITE_INFO.title,
  image = SITE_INFO.image,
  description = SITE_INFO.description,
  author = SITE_INFO.author,
} = Astro.props as Props

---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <meta name="description" content={ description } />
    <meta name="author" content={ author } />

    <meta property="og:title" content={ title } />
    <meta property="og:description" content={ description } />
    <meta property="og:image" content={ image } />

    <title>{ title }</title>
    <ClientRouter />
  </head>
  <body>
    <main class:list={[
      'w-full min-h-screen flex',
      Astro.props.class
    ]}
    >
      <aside
        class={ `-translate-x-full fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0` }
        id="sidebar"
      >
        <div class="flex items-center justify-between p-4 border-b">
          <span class="text-2xl font-bold text-primary"> üõ†Ô∏è Jobs Now üöÄ </span>
          <button
            class="lg:hidden"
            id="closeSidebar"
          >
            <Icon size={ 24 } name="mdi:close-thick" class="text-red-500" />
          </button>
        </div>
        <AdminNav />
      </aside>

      <div class="flex-1 flex flex-col overflow-hidden">
        <header class="bg-white shadow-sm">
          <div class="flex items-center justify-between p-4">
            <button
              id="openSidebar"
              class="text-gray-500 focus:outline-none focus:text-gray-700 lg:hidden"
            >
              <Icon size={ 24 } name="mdi:menu" />
            </button>
            <div class="flex items-center">
              <div class="relative">
                <input
                  type="text"
                  placeholder="Buscar..."
                  class="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-primary text-slate-800"
                />
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-500">
                  <Icon size={ 24 } name="mdi:magnify" />
                </div>
              </div>
            </div>
            <div class="flex items-center">
              <button class="flex mx-4 text-gray-600 focus:outline-none">
                <Icon size={ 24 } name="mdi:bell-outline" />
              </button>
              <div class="relative">
                <button class="flex items-center text-gray-600 focus:outline-none">
                  <img
                    class="h-8 w-8 rounded-full object-cover"
                    src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                    alt="Admin avatar"
                  />
                  <span class="ml-2"> Admin </span>
                  <Icon size={ 24 } name="mdi:chevron-down" />
                </button>
              </div>
            </div>
          </div>
        </header>
        <slot />
      </div>
    </main>
  </body>
</html>

<script>
const handlerPageLoad = () => {
  const sidebar = document.getElementById( 'sidebar' ) as HTMLDivElement;
  const openSidebarBtn = document.getElementById('openSidebar') as HTMLButtonElement;
  const closeSidebarBtn = document.getElementById('closeSidebar') as HTMLButtonElement;

  if ( !sidebar || !openSidebarBtn || !closeSidebarBtn ) return;


  openSidebarBtn.addEventListener('click', () => {
    sidebar.classList.remove( '-translate-x-full' );
    sidebar.classList.add( 'translate-x-0' );
  });

  closeSidebarBtn.addEventListener('click', () => {
    sidebar.classList.remove('translate-x-0');
    sidebar.classList.add('-translate-x-full');
  });
}

document.addEventListener( 'astro:page-load', handlerPageLoad )
</script>
