---
import { SITE_INFO } from '@/constants/site-info'
import { Icon } from 'astro-icon/components'
import WorkerNav from '@/modules/workers/components/ui/WorkerNav.astro'
import { getSession } from 'auth-astro/server'
import { actions } from 'astro:actions'


const session = await getSession( Astro.request )

const { user: sessionUser } = session ?? {}
if ( !sessionUser ) return Astro.redirect( '/auth/signin' )
const { data: userData, error: userError } = await actions.findOneUser({ id: sessionUser.id })

if ( userError ) return Astro.redirect( '/auth/signin' )
const { user } = userData

interface Props {
  title?: string
  image?: string
  description?: string
  author?: string
  class?: string
}

const {
  title = SITE_INFO.title,
  image = SITE_INFO.image,
  description = SITE_INFO.description,
  author = SITE_INFO.author,
} = Astro.props as Props

---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <meta name="description" content={ description } />
    <meta name="author" content={ author } />

    <meta property="og:title" content={ title } />
    <meta property="og:description" content={ description } />
    <meta property="og:image" content={ image } />

    <title>{ title }</title>
  </head>
  <body>
    <main class:list={[
      'w-full min-h-screen flex',
      Astro.props.class
    ]}
    >
      <aside
        class={ `-translate-x-full fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0` }
        id="sidebar"
      >
        <div class="flex items-center justify-between p-4 border-b">
          <span class="text-2xl font-bold text-primary"> üõ†Ô∏è Jobs Now üöÄ </span>
          <button
            class="lg:hidden"
            id="closeSidebar"
          >
            <Icon size={ 24 } name="mdi:close-thick" class="text-red-500" />
          </button>
        </div>
        <WorkerNav />
      </aside>

      <div class="flex-1 flex flex-col overflow-hidden">
        <header class="shadow-sm bg-primary">
          <div class="flex items-center justify-between px-4">
            <button
              id="openSidebar"
              class="text-gray-500 focus:outline-none focus:text-gray-700 lg:hidden"
            >
              <Icon size={ 24 } name="mdi:menu" />
            </button>
            <nav class="bg-primary text-white shadow-lg w-full">
              <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between h-16">
                  <div class="flex items-center">
                    <span class="font-bold text-xl">üõ†Ô∏è Dashboard del Trabajador</span>
                  </div>
                  <a class="flex items-center" href="/worker/profile">
                    <span class="text-sm mr-4"> { user?.name } </span>
                    <img
                      class="h-8 w-8 rounded-full bg-white"
                      src={ ( user?.avatar ) ? user.avatar : '/avatar.svg' }
                      alt="Perfil"
                    />
                  </a>
                </div>
              </div>
            </nav>
          </div>
        </header>
        <slot />
      </div>
    </main>
  </body>
</html>

<script>
const sidebar = document.getElementById( 'sidebar' ) as HTMLDivElement;

const openSidebarBtn = document.getElementById('openSidebar') as HTMLButtonElement;
const closeSidebarBtn = document.getElementById('closeSidebar') as HTMLButtonElement;

openSidebarBtn.addEventListener('click', () => {
  sidebar.classList.remove( '-translate-x-full' );
  sidebar.classList.add( 'translate-x-0' );
});

closeSidebarBtn.addEventListener('click', () => {
  sidebar.classList.remove('translate-x-0');
  sidebar.classList.add('-translate-x-full');
});
</script>
