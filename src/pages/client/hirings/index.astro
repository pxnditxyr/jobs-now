---
import { getSession } from 'auth-astro/server'
import { actions } from 'astro:actions'
import ClientLayout from '@/modules/clients/layouts/ClientLayout.astro'
import WorkerNameCard from '@/modules/clients/components/cards/WorkerNameCard.astro'
import { formatDate } from '@/utils'

const session = await getSession( Astro.request )
const { user } = session ?? {}

if ( !user ) return Astro.redirect( '/auth/signin' )

const { data: hiringsData, error: hiringsError } = await Astro.callAction( actions.getAllHiringsByUserId, { userId: user.id } )
if ( hiringsError ) return Astro.redirect( '/' )
const { hirings } = hiringsData

const stateEmojis: { [key: string]: string } = {
  pending: '‚è≥ Pendiente',
  approved: 'üü¢ Aprobado',
  completed: '‚úÖ Rechazado',
  cancelled: '‚ùå Cancelado',
}
---

<ClientLayout>
  <div class="min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8">
    <div class="max-w-7xl mx-auto">
      <h1 class="text-3xl font-bold text-gray-900 mb-6">üìã Historial de Contrataciones</h1>
      <div class="bg-white shadow overflow-hidden sm:rounded-lg">
        <ul class="divide-y divide-gray-200">
          { hirings.map( ( hiring ) => (
          <li class="p-4 sm:p-6 hover:bg-gray-50 transition-colors duration-150 ease-in-out">
            <h1 class="text-xl font-bold text-gray-900 mb-4"> Contrato realizado üìù</h1>
            <div class="flex items-center justify-between flex-wrap sm:flex-nowrap">
              <div class="mb-4 sm:mb-0">
                <p class="text-sm text-gray-500">
                  <WorkerNameCard workerId={ hiring.workerProfileId } />
                </p>
              </div>
              <div class="flex-shrink-0">
                <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
            hiring.state === 'approved' ? 'bg-green-100 text-green-800' :
            hiring.state === 'completed' ? 'bg-blue-100 text-blue-800' :
            hiring.state === 'cancelled' ? 'bg-red-100 text-red-800' :
            'bg-yellow-100 text-yellow-800'
            }`}>
                  { stateEmojis[ hiring.state ] }
                </span>
              </div>
            </div>
            <div class="mt-2 sm:flex sm:justify-between">
              <div class="sm:flex">
                <p class="flex items-center text-sm text-gray-500">
                  <span class="mdi mdi-calendar-blank mr-1.5 text-gray-400"></span>
                  { formatDate (hiring.contractDate) }
                </p>
              </div>
              <div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0">
                <!--<button class="flex items-center justify-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">-->
                <!--  <span class="mdi mdi-eye mr-2"></span>-->
                <!--  Ver detalles-->
                <!--</button>-->
              </div>
            </div>
          </li>
          ) ) }
        </ul>
      </div>
    </div>
  </div>
</ClientLayout>
