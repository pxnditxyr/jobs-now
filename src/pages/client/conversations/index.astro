---
import ClientLayout from '@/modules/clients/layouts/ClientLayout.astro'
import { actions } from 'astro:actions'
import { getSession } from 'auth-astro/server'
import { ChatInterface } from '@/modules/shared/components/chats/ChatInterface.tsx'

const session = await getSession( Astro.request )

const { user: sessionUser } = session ?? {}

if ( !sessionUser ) return Astro.redirect( '/auth/signin' )

const { data: userData, error: userError } = await Astro.callAction( actions.findOneUser, { id: sessionUser.id } )
if ( userError ) return Astro.redirect( '/auth/signin' )
const { user } = userData


//const userId = Astro.url.searchParams.get( 'userId' ) ?? ''
const workerId = Astro.url.searchParams.get( 'workerId' ) ?? ''
let currentHiring = { state: 'approved' }
if ( workerId !== '' ) {
  const { data: workerProfileData, error: workerProfileError } = await Astro.callAction( actions.findOneWorkerProfileByUserId, { userId: workerId } )
  if ( workerProfileError ) return Astro.redirect( '/client/wallet' )
  const { workerProfile } = workerProfileData


  const { data: currentHiringData, error: currentHiringError } = await Astro.callAction( actions.getHiringByUserId, { userId: user.id, wokerProfileId: workerProfile.id } )
  if ( currentHiringError ) return Astro.redirect( '/' )
  const { hiring: currentHiringxd } = currentHiringData
  currentHiring = currentHiringxd
}

---


<ClientLayout>
  <div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4 sm:p-6 md:p-8">
    <ChatInterface
      client:only="react"
      userId={ user.id }
      workerId={ workerId }
      currentUser={ user }
      disabled={ ( currentHiring.state !== 'approved' ) }
    />
</ClientLayout>
